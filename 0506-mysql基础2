1.常见的软件架构
	单机
	b/s  浏览器/服务器
	c/s  客户端/服务器
		客户端:
			pc端
			移动端
2.前端和后端
	前端
		html
		css
		js
		ui
	后端
		操作系统
		web服务器
		数据库服务器
3.常见的数据库软件
	关系型数据库
		oracle
		mysql
		sqlserver
	非关系型数据库
		mongodb
		redis
4.mysql基础
	数据库:软件、数据
	数据库是由表组成
	表是由数据组成
5.mysql的登陆
	登陆命令
		mysql -u root -p
		mysql -h 192.168.6.187 -u root -p
	登陆方式
		进入到命令所在文件夹
		设置环境变量
6.mysql的基础命令
	show databases;
	select database();
	use test;
	show tables;
	select * from ecs_goods;
7.表结构
	a.创建表
	语法:create table 表(
		列 数据类型 约束，
		列 数据类型 约束,
		。。。
	);
	b.删除表
	语法:drop table 表;
	c.修改表
		增加列
		alter table 表 add 列 数据类型 约束;
		修改列
		alter table 表 modify 列 数据类型 约束;
		删除列
		alter table 表 drop column 列;
8.SQL分类
	DDL:  create alter drop turncate
	DML:  insert delete update
	DCL：  grant revoke
	DQL:  select

9.数据的新增
	向表中指定列新增数据
	语法:insert into 表(列1，列2) values(值1，值2);
	向表中所有列新增数据
	语法:insert into 表 values(值1，值2....);

10.数据的修改
	语法:update 表 set 列=值 where 条件;

11.数据的删除
	truncate  DDL  表中所有数据  无法找回
	delete    DML  指定数据      可以找回
	delete语法:
	delete from 表 where 条件 ;
	truncate语法:
	truncate table 表;

========================================================================
1.数据的查询
a.查询分类
	a1.简单查询
	a2.多表查询
	a3.子查询
	a4.分组查询
b.简单查询
	语法:select 列 from 表 where 条件;
	ecshop数据库的表结构
	http://book.ecmoban.com/images/db.htm
	查询可以查询指定行
		需求:查询商品表中商品名称是KD876的所有信息
		select * from ecs_goods where goods_name='KD876';
	查询可以查询指定列
		需求:查询商品表中所有的商品名称
		select goods_name from ecs_goods;
	查询指定行的列
		需求:查询商品表中商品名称是KD876的本店售价
		select shop_price from ecs_goods where goods_name='KD876';
	注意:select后面from前面是和列相关的，where后面是和行相关
	where条件
		1>比较
			>   大于
			<   小于
			=   等于
			>=  大于等于
			<=  小于等于
			!=  不等于
			<>  不等于
			需求:查询ecs_goods表中本店售价高于3000的商品的所有信息
			select * from ecs_goods where shop_price>3000;
			需求:查询ecs_goods表中商品名称不是KD876的所有信息
			select * from ecs_goods where goods_name<>'KD876';
		2>关系
			and  同时满足条件
			or   满足一个条件即可
			not  不满足条件
			需求:查询ecs_goods表中本店售价范围2000和3000之间的所有信息
			select * from ecs_goods where shop_price>=2000 and shop_price<=3000;
			需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
			select * from ecs_goods where goods_name='KD876' or goods_name='诺基亚';
		3>区间
			between...and...
			区间是包括两个端点的，小在前，大在后
			需求:查询ecs_goods表中本店售价范围2000和3000之间的所有信息
			select * from ecs_goods where shop_price between 2000 and 3000;
		4.模糊查询
			当信息不完整时候使用，通常和字符类型一起使用
			like
			_    一个字符
			%    任意个字符
			需求:查询ecs_goods表中商品名称是诺基亚的所有信息
			select * from ecs_goods where goods_name like '诺基亚%';
			需求:查询ecs_goods表中商品名称是6结尾的所有信息
			select * from ecs_goods where goods_name like '%6';
			需求:查询ecs_goods表中商品名称是6个字符的所有信息
			select * from ecs_goods where goods_name like '______';
		5.空值查询（null）
			空:没有任何数据类型，没有任何值，不能用于比较和运算，查询时候使用is null或者is not null
			需求:查询ecs_goods表中suppliers_id非空的所有信息
			select * from ecs_goods where suppliers_id is not null;
			需求:查询ecs_goods表中suppliers_id为空的所有信息
			select * from ecs_goods where suppliers_id is null;
		6.在...里面
			in 或者的关系
			需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
			select * from ecs_goods where goods_name in ('KD876','诺基亚');
c.图形工具(管理mysql)
	mysql workbench
	sqlyog(小海豚)
	dbeaver
	navicat

d.多表查询
	当一张表无法满足条件时候使用多张表
d1.笛卡尔积
	两张表不做任何关联产生的数据，无效数据增加，数据量翻倍，为了避免此类情况，使用连接查询
	select * from ecs_goods;
	select * from ecs_category;
	select * from ecs_goods,ecs_category;
d2.连接查询(内联查询、左联查询、右联查询)
	内联查询语法：
	select 列 from 表1，表2 where 表1.列=表2.列;
	select 列 from 表1 inner join 表2 on 表1.列=表2.列;	
	关联的列
		1.名字相同
		2.作用相同
		3.主外键关系
	需求:查询商品名称是KD876的分类名称
	1.分析列
		商品名称
		分类名称
	2.分析表
		商品名称   ecs_goods
		分类名称   ecs_category
	3.关联
		select * from ecs_goods,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id;
	4.过滤
		select cat_name from ecs_goods,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id
		and goods_name='KD876';
	需求:查询分类名称是3G手机的商品名称有哪些？
	1.分析列
		分类名称
		商品名称
	2.分析表
		商品名称   ecs_goods
		分类名称   ecs_category
	3.关联
		select * from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id;
	4.过滤
		select g.goods_name from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id
		and c.cat_name='3G手机';


